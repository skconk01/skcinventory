<?php
// $Id: invdb.module,v 1.2 2012/08/22 14:28:14 stephen Exp stephen $

/**
 * @file
 * will handle inventory data base interaction
 *
 */

/**
 * function to update the database based on data from the input.module
 * @method invdb_update_database($db_table, $data_array)
 * @param string             $db_table  name of the table to update
 * @param associative array  $data_array  array containg the data to update
 * @return integer           $inv_id  the row that was updated
 *
 */
function invdb_update_database($db_table, $data_array) {
  
  $table = $db_table;

  try {
  $inv_id = db_insert($table)
  ->fields(array(
		 'user_id' => $data_array['name'],
		 'asset_tag' => $data_array['fixed_asset_tag'],
		 'serial_num' => $data_array['serial-number'],
		 'cub_id' => $data_array['cubid'],
		 'hostname' => $data_array['hostname'],
		 'ip_address' => $data_array['ipaddress'],
		 'machine_type' => $data_array['machine_type'],
		 'machine_user' => $data_array['machine_user'],
		 'machine_task' => $data_array['machine_task'],
		 'service_date_eop' => $data_array['service_date_eop'],
		 'service_date_str' => $data_array['service_date_str'],
		 'primary_os' => $data_array['primary_os'],
  ))
  ->execute();
  } catch (Exception $e) {
    drupal_set_message(t("Sorry, that didn't work. The name must be unique. $e"), 'error');
    $inv_id = 0;
  }
  
  return $inv_id;
}
//------------------------------------------------------------------------------------------

/**
 * function to update the zz_system_os table with the operating system information
 * @method invdb_update_os_table($data)
 * @param array $data
 * 
 */
//---------------------------------------------------------------------------------------
function invdb_update_os_table($data){

  $stop = 'here';
  
  $rd['zz_team_inv_inv_id'] = $data['step1']['hostname'];
  $posarray = $data['step2'];

  $rd['sos_name'] = $posarray['os_type']; // L linux, W windows, S solaris
  $rd['sos_version'] = $posarray['os_version']; // sting discribing the os
  $rd['sos_type'] = 'P';  // P for primary os

  __invdb_load_os_data($rd); // load the os table with primary os data

  $num_sos = $posarray['os_secd_num'];
  
  $sosarray = $data['step3'];
  
  for ($i=0; $i<$num_sos; $i++){
    $rd['sos_name'] = $sosarray[$i]['os_type']; // L linux, W windows, S solaris
    $rd['sos_version'] = $sosarray[$i]['os_version']; // sting discribing the os
    $rd['sos_type'] = 'S';  // P for primary os
    
    __invdb_load_os_data($rd); // load the os table with primary os data
  }


  
  
  
  
 
  
}//end invdb_update_os_table
//----------------------------------------------------------------------------------------

/**
 * function to load the zz_system_os table data this function is local to this module
 * @method invdb_load_os_data($rd)
 * @param array $rd  row data
 * @return integer $sos_id
 * 
 */
function __invdb_load_os_data($rd){

  $table = 'zz_system_os';
  $sos_name = __invdb_os_name($rd['sos_name']);
  $sos_id = 0;  
  try {
    $sos_id = db_insert($table)
    ->fields(array(
		   'sos_name'  => $sos_name,
		   'sos_version'  => $rd['sos_version'],
		   'sos_type'  => $rd['sos_type'],
		   'zz_team_inv_inv_id'  => $rd['zz_team_inv_inv_id'],
    
    ))
    ->execute();
  } catch (Exception $e) {
    drupal_set_message(t("Sorry, that didn't work. The name must be unique. $e"), 'error');
    $sos_id = 0;
  }
  
  return $sos_id;
}// end of invdb_load_os_data($rd){
//------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------
/**
 * function to give a name to the system os
 * @method __invdb_os_name($name_char)  local to this module
 * @param string $name_char   L linux, W sindows S solaris
 * @return  sting $os_name   name of the os
 * 
 */
function __invdb_os_name($name_char){

  $os_name = 'none';
  switch ($name_char)
  {
    case 'W':
      $os_name = 'Windows';
      break;
    case 'L':
      $os_name = 'Linux';
      break;
      case 'S':
        $os_name = 'Solaris';
        break;      
    default:
      $os_name = 'none';
  }
  
 return $os_name;
}//end of __invdb_os_name($name_char)


//------------------------------------------------------------------------------------------
/**
 * function to get a list of computers for a given user
 * @method invdb_get_computer_list($user_name)
 * @param  string  $user_name
 * @param  array   $computer_list
 * 

select ti.inv_id, ti.user_id, ti.hostname, so.sos_name 
  from zz_team_inv as ti, zz_system_os as so
  where ti.inv_id = so.zz_team_inv_inv_id	  
  and  ti.user_id = 'sconklin'
  and so.sos_type = 'P'
;


 */
function invdb_get_computer_list($user_name){
  $stop = 0;
  
  $query = ("SELECT inv_id, hostname, user_id, primary_os FROM zz_team_inv
             WHERE user_id = '" . $user_name . "'
            ");
 

  /* $query = ("select ti.inv_id, ti.user_id, ti.hostname, so.sos_name */
  /*            from zz_team_inv as ti, zz_system_os as so */
  /*             where ti.inv_id = so.zz_team_inv_inv_id */
  /*             and  ti.user_id = '" . $user_name . "' */
  /*             and so.sos_type = 'P' */
  /*            "); */

 
  $result = db_query($query);
  
  foreach ($result as $row) {
    $computer_list[] = $row;
  }
  return $computer_list;
}// end of invdb_get_computer_list


//-------------------------------------------------------------------------
/**
 * function to get the hostname based on the inv_id
 * @method invdb_get_hostname($inv_id)
 * @param  string  $inv_id
 * @return  string  $hostname
 * 
 */
function invdb_get_hostname($inv_id){
  $stop = 0;
  
  $query = ("SELECT hostname  FROM zz_team_inv
             WHERE inv_id = '" . $inv_id . "'
            ");
  
  $result = db_query($query);
  
  foreach ($result as $row) {
    $rd[] = $row;
  }
  $hostname = $rd[0];

  return $hostname;
}// end of invdb_get_hostname
//-------------------------------------------------------------------------


//-------------------------------------------------------------------------
/**
 * function to update the file name of the system info file
 * @method invdb_update_sysinfo_file
 * @param string $zz_team_inv_inv_id  id of the system file belons to
 * @param string $file_name name of file to upload
 * @param string $directory drupalized driectory where file is saved.
 * @return integer $sys_id
 */
function invdb_update_sysinfo_file($zz_team_inv_inv_id, $file_name, $directory){
  $table = 'zz_system_info';
  
  //$fn = "$directory/$file_name";
  
  try {
    $sys_id = db_insert($table)
    ->fields(array(
        'zz_team_inv_inv_id' => $zz_team_inv_inv_id,
        'file_name' => $file_name,
        'file_path' => $directory,
    ))
    ->execute();
  } catch (Exception $e) {
    drupal_set_message(t("Sorry, that didn't work. The name must be unique. $e"), 'error');
    $sys_id = 0;
  }
  
return $sys_id;
}//end of invdb_update_sysinfo_file
//-------------------------------------------------------------------------

